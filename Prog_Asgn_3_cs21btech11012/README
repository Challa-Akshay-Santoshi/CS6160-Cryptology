Akshay Santoshi
CS21BTECH11012

PART 1:

Execute using the command: python3 Prog_Asgn_3_1_cs21btech11012.py

Approach:  First, we iterate through all possible 20-bit key guesses, expand each key, decrypt the first given ciphertext
           using that key, and check whether the resulting decrypted text obtained matches with the first given plaintext.
           Next, we verify if this key gives the corresponding ciphertexts for all plaintexts.
           If yes, we use this key to decrypt the ciphertext of the unknown plaintext to get the answer.



PART 2:

Execute using the command: python3 Prog_Asgn_3_2_cs21btech11012.py

Approach: We make use of meet-in-the-middle attack. First, we create lookup-table which consists of possible intermediate
          ciphertexts generated by encrypting the first given plaintext using all possible 2^16 keys key1 using AES and store them. 
          Now for each of the 2^16 possible keys key2, we decrypt the first given ciphertext using AES, and check whether this
          middle ciphertext value obtained matches with any of the intermediate value stored in the lookup-table. Now we have a pair
          (key1, key2). We verify if this is the valid pair by checking if it correctly decrypts the ciphertexts. If yes, we have 
          found the answer.